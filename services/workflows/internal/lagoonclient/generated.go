package lagoonclient

// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// __getEnvironmentByIdWorkflowsInput is used internally by genqlient
type __getEnvironmentByIdWorkflowsInput struct {
	EnvironmentId int `json:"environmentId"`
}

// __getEnvironmentWorkflowsInput is used internally by genqlient
type __getEnvironmentWorkflowsInput struct {
	Project int    `json:"project"`
	Name    string `json:"name"`
}

// __invokeCustomTaskInput is used internally by genqlient
type __invokeCustomTaskInput struct {
	EnvironmentId            int `json:"environmentId"`
	AdvancedTaskDefinitionId int `json:"advancedTaskDefinitionId"`
}

// getEnvironmentByIdWorkflowsEnvironmentByIdEnvironment includes the requested fields of the GraphQL type Environment.
// The GraphQL type's documentation follows.
//
// Lagoon Environment (for each branch, pullrequest there is an individual environment)
type getEnvironmentByIdWorkflowsEnvironmentByIdEnvironment struct {
	// Internal ID of this Environment
	Id int `json:"id"`
	// Name of this Environment
	Name      string                                                                   `json:"name"`
	Workflows []getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow `json:"workflows"`
}

// getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow includes the requested fields of the GraphQL type Workflow.
type getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow struct {
	Id                     int                                                                                          `json:"id"`
	Event                  string                                                                                       `json:"event"`
	AdvancedTaskDefinition getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition `json:"-"`
}

func (v *getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow
		AdvancedTaskDefinition json.RawMessage `json:"advancedTaskDefinition"`
		graphql.NoUnmarshalJSON
	}
	firstPass.getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.AdvancedTaskDefinition
		src := firstPass.AdvancedTaskDefinition
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalgetEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"Unable to unmarshal getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow.AdvancedTaskDefinition: %w", err)
			}
		}
	}
	return nil
}

type __premarshalgetEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow struct {
	Id int `json:"id"`

	Event string `json:"event"`

	AdvancedTaskDefinition json.RawMessage `json:"advancedTaskDefinition"`
}

func (v *getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow) __premarshalJSON() (*__premarshalgetEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow, error) {
	var retval __premarshalgetEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow

	retval.Id = v.Id
	retval.Event = v.Event
	{

		dst := &retval.AdvancedTaskDefinition
		src := v.AdvancedTaskDefinition
		var err error
		*dst, err = __marshalgetEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"Unable to marshal getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflow.AdvancedTaskDefinition: %w", err)
		}
	}
	return &retval, nil
}

// getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition includes the requested fields of the GraphQL interface AdvancedTaskDefinition.
//
// getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition is implemented by the following types:
// getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage
// getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand
type getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition interface {
	implementsGraphQLInterfacegetEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage) implementsGraphQLInterfacegetEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition() {
}

// GetTypename is a part of, and documented with, the interface getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition.
func (v *getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage) GetTypename() string {
	return v.Typename
}

func (v *getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand) implementsGraphQLInterfacegetEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition() {
}

// GetTypename is a part of, and documented with, the interface getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition.
func (v *getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand) GetTypename() string {
	return v.Typename
}

func __unmarshalgetEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition(b []byte, v *getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AdvancedTaskDefinitionImage":
		*v = new(getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage)
		return json.Unmarshal(b, *v)
	case "AdvancedTaskDefinitionCommand":
		*v = new(getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"Response was missing AdvancedTaskDefinition.__typename")
	default:
		return fmt.Errorf(
			`Unexpected concrete type for getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition: "%v"`, tn.TypeName)
	}
}

func __marshalgetEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition(v *getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage:
		typename = "AdvancedTaskDefinitionImage"

		result := struct {
			TypeName string `json:"__typename"`
			*getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage
		}{typename, v}
		return json.Marshal(result)
	case *getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand:
		typename = "AdvancedTaskDefinitionCommand"

		result := struct {
			TypeName string `json:"__typename"`
			*getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`Unexpected concrete type for getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinition: "%T"`, v)
	}
}

// getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand includes the requested fields of the GraphQL type AdvancedTaskDefinitionCommand.
type getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand struct {
	Typename string `json:"__typename"`
	Id       int    `json:"id"`
	Command  string `json:"command"`
}

// getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage includes the requested fields of the GraphQL type AdvancedTaskDefinitionImage.
type getEnvironmentByIdWorkflowsEnvironmentByIdEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage struct {
	Typename string `json:"__typename"`
	Id       int    `json:"id"`
	Image    string `json:"image"`
}

// getEnvironmentByIdWorkflowsResponse is returned by getEnvironmentByIdWorkflows on success.
type getEnvironmentByIdWorkflowsResponse struct {
	EnvironmentById getEnvironmentByIdWorkflowsEnvironmentByIdEnvironment `json:"environmentById"`
}

// getEnvironmentWorkflowsEnvironmentByNameEnvironment includes the requested fields of the GraphQL type Environment.
// The GraphQL type's documentation follows.
//
// Lagoon Environment (for each branch, pullrequest there is an individual environment)
type getEnvironmentWorkflowsEnvironmentByNameEnvironment struct {
	// Internal ID of this Environment
	Id int `json:"id"`
	// Name of this Environment
	Name      string                                                                 `json:"name"`
	Workflows []getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow `json:"workflows"`
}

// getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow includes the requested fields of the GraphQL type Workflow.
type getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow struct {
	Id                     int                                                                                        `json:"id"`
	Event                  string                                                                                     `json:"event"`
	AdvancedTaskDefinition getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition `json:"-"`
}

func (v *getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow
		AdvancedTaskDefinition json.RawMessage `json:"advancedTaskDefinition"`
		graphql.NoUnmarshalJSON
	}
	firstPass.getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.AdvancedTaskDefinition
		src := firstPass.AdvancedTaskDefinition
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalgetEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"Unable to unmarshal getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow.AdvancedTaskDefinition: %w", err)
			}
		}
	}
	return nil
}

type __premarshalgetEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow struct {
	Id int `json:"id"`

	Event string `json:"event"`

	AdvancedTaskDefinition json.RawMessage `json:"advancedTaskDefinition"`
}

func (v *getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow) __premarshalJSON() (*__premarshalgetEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow, error) {
	var retval __premarshalgetEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow

	retval.Id = v.Id
	retval.Event = v.Event
	{

		dst := &retval.AdvancedTaskDefinition
		src := v.AdvancedTaskDefinition
		var err error
		*dst, err = __marshalgetEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"Unable to marshal getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflow.AdvancedTaskDefinition: %w", err)
		}
	}
	return &retval, nil
}

// getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition includes the requested fields of the GraphQL interface AdvancedTaskDefinition.
//
// getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition is implemented by the following types:
// getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage
// getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand
type getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition interface {
	implementsGraphQLInterfacegetEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage) implementsGraphQLInterfacegetEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition() {
}

// GetTypename is a part of, and documented with, the interface getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition.
func (v *getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage) GetTypename() string {
	return v.Typename
}

func (v *getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand) implementsGraphQLInterfacegetEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition() {
}

// GetTypename is a part of, and documented with, the interface getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition.
func (v *getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand) GetTypename() string {
	return v.Typename
}

func __unmarshalgetEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition(b []byte, v *getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AdvancedTaskDefinitionImage":
		*v = new(getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage)
		return json.Unmarshal(b, *v)
	case "AdvancedTaskDefinitionCommand":
		*v = new(getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"Response was missing AdvancedTaskDefinition.__typename")
	default:
		return fmt.Errorf(
			`Unexpected concrete type for getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition: "%v"`, tn.TypeName)
	}
}

func __marshalgetEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition(v *getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage:
		typename = "AdvancedTaskDefinitionImage"

		result := struct {
			TypeName string `json:"__typename"`
			*getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage
		}{typename, v}
		return json.Marshal(result)
	case *getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand:
		typename = "AdvancedTaskDefinitionCommand"

		result := struct {
			TypeName string `json:"__typename"`
			*getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`Unexpected concrete type for getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinition: "%T"`, v)
	}
}

// getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand includes the requested fields of the GraphQL type AdvancedTaskDefinitionCommand.
type getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionCommand struct {
	Typename string `json:"__typename"`
	Id       int    `json:"id"`
	Command  string `json:"command"`
}

// getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage includes the requested fields of the GraphQL type AdvancedTaskDefinitionImage.
type getEnvironmentWorkflowsEnvironmentByNameEnvironmentWorkflowsWorkflowAdvancedTaskDefinitionAdvancedTaskDefinitionImage struct {
	Typename string `json:"__typename"`
	Id       int    `json:"id"`
	Image    string `json:"image"`
}

// getEnvironmentWorkflowsResponse is returned by getEnvironmentWorkflows on success.
type getEnvironmentWorkflowsResponse struct {
	EnvironmentByName getEnvironmentWorkflowsEnvironmentByNameEnvironment `json:"environmentByName"`
}

// invokeCustomTaskInvokeRegisteredTask includes the requested fields of the GraphQL type Task.
type invokeCustomTaskInvokeRegisteredTask struct {
	Id     int    `json:"id"`
	Status string `json:"status"`
}

// invokeCustomTaskResponse is returned by invokeCustomTask on success.
type invokeCustomTaskResponse struct {
	InvokeRegisteredTask invokeCustomTaskInvokeRegisteredTask `json:"invokeRegisteredTask"`
}

func getEnvironmentWorkflows(
	ctx context.Context,
	client graphql.Client,
	project int,
	name string,
) (*getEnvironmentWorkflowsResponse, error) {
	__input := __getEnvironmentWorkflowsInput{
		Project: project,
		Name:    name,
	}
	var err error

	var retval getEnvironmentWorkflowsResponse
	err = client.MakeRequest(
		ctx,
		"getEnvironmentWorkflows",
		`
query getEnvironmentWorkflows ($project: Int!, $name: String!) {
	environmentByName(project: $project, name: $name) {
		id
		name
		workflows {
			id
			event
			advancedTaskDefinition {
				__typename
				... on AdvancedTaskDefinitionCommand {
					id
					command
				}
				... on AdvancedTaskDefinitionImage {
					id
					image
				}
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getEnvironmentByIdWorkflows(
	ctx context.Context,
	client graphql.Client,
	environmentId int,
) (*getEnvironmentByIdWorkflowsResponse, error) {
	__input := __getEnvironmentByIdWorkflowsInput{
		EnvironmentId: environmentId,
	}
	var err error

	var retval getEnvironmentByIdWorkflowsResponse
	err = client.MakeRequest(
		ctx,
		"getEnvironmentByIdWorkflows",
		`
query getEnvironmentByIdWorkflows ($environmentId: Int!) {
	environmentById(id: $environmentId) {
		id
		name
		workflows {
			id
			event
			advancedTaskDefinition {
				__typename
				... on AdvancedTaskDefinitionCommand {
					id
					command
				}
				... on AdvancedTaskDefinitionImage {
					id
					image
				}
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func invokeCustomTask(
	ctx context.Context,
	client graphql.Client,
	environmentId int,
	advancedTaskDefinitionId int,
) (*invokeCustomTaskResponse, error) {
	__input := __invokeCustomTaskInput{
		EnvironmentId:            environmentId,
		AdvancedTaskDefinitionId: advancedTaskDefinitionId,
	}
	var err error

	var retval invokeCustomTaskResponse
	err = client.MakeRequest(
		ctx,
		"invokeCustomTask",
		`
mutation invokeCustomTask ($environmentId: Int!, $advancedTaskDefinitionId: Int!) {
	invokeRegisteredTask(environment: $environmentId, advancedTaskDefinition: $advancedTaskDefinitionId) {
		id
		status
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}
