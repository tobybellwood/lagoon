- name: "{{ testname }} - init git, add files, commit, git push"
  hosts: localhost
  serial: 1
  vars:
    git_files: "node{{ node_version }}/"
  tasks:
  - include: ../../tasks/git-init.yaml
  - include: ../../tasks/git-add-commit-push.yaml

- name: "{{ testname }} - api deployEnvironmentBranch on {{ project }}, which should deploy the first commit"
  hosts: localhost
  serial: 1
  vars:
    branch: "{{ branch }}"
    project: "{{ project }}"
  tasks:
  - include: ../../tasks/api/deploy-no-sha.yaml

- name: "{{ testname }} - check if we can connect via lagoon user"
  hosts: localhost
  serial: 1
  vars:
    username: lagoon
    command: "rsh {{ project }}-remoteshell service=node env"
    expected_content: "LAGOON_PROJECT={{ project }}"
  tasks:
  - include: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - check if we can connect via oc project user"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-remoteshell"
    command: service=node env
    expected_content: "LAGOON_PROJECT={{ project }}"
  tasks:
  - include: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - check if we can connect via oc project user and defining the container"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-remoteshell"
    command: service=node container=node env
    expected_content: "LAGOON_PROJECT={{ project }}"
  tasks:
  - include: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - check if we are on the right git hash via oc project user"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-remoteshell"
    command: service=node env
    expected_content: "LAGOON_GIT_SHA={{ current_head }}"
  tasks:
  - include: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - check if we are on the right git branch via oc project user"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-remoteshell"
    command: service=node env
    expected_content: "LAGOON_GIT_BRANCH={{ branch }}"
  tasks:
  - include: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - api deleteEnvironment on {{ project }}, which should remove all resources"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project }}"
    branch: "{{ branch }}"
  tasks:
  - include: ../../tasks/api/remove.yaml

- name: "{{ testname }} - check if site for {{ project }} does not exist anymore"
  hosts: localhost
  serial: 1
  vars:
    url: "{{ check_url }}"
    expected_returncode: "{{ del_status_code }}"
  tasks:
  - include: ../../checks/check-url-returncode.yaml
