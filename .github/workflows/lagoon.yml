name: Lagoon test

on:
  push:
    branches:
      - helm_actions
  pull_request:
    branches:
      - main

jobs:
  test-suite:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        kindest_node_version: [v1.21.1]
        experimental: [false]
        # include:
        #   - kindest_node_version: v1.22.0
        #     experimental: true
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: "0"
    # - name: Setup correct Go version
    #   uses: actions/setup-go@v2
    #   with:
    #     go-version: '1.16'
    # - name: Run Kubernetes tools
    #   uses: stefanprodan/kube-tools@v1
    - name: Get Kind IP
      run: |
        docker network create kind || true && docker run --rm --network kind alpine ip -o addr show eth0 | sed -nE 's/.* ([0-9.]{7,})\/.*/\1/p'
        echo "kind_ip=$(docker network create kind || true && docker run --rm --network kind alpine ip -o addr show eth0 | sed -nE 's/.* ([0-9.]{7,})\/.*/\1/p')" >> $GITHUB_ENV
        echo "Kind cluster is at ${{ env.kind_ip }}"
    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@v2
      with:
        find: "172.17.0.2"
        replace: ${{ env.kind_ip }}
        include: "helmvalues/*.yaml"
    - name: Check config
      run: |
        cat helmvalues/kind-config.yaml
    - name: Create kind cluster
      uses: helm/kind-action@v1.2.0
      with:
        config: helmvalues/kind-config.yaml
        node_image: kindest/node:${{ matrix.kindest_node_version }}
        wait: 120s
    - name: Configure Helm repositories
      run: |
        helm plugin install https://github.com/aslafy-z/helm-git
        helm repo add harbor https://helm.goharbor.io
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo add stable https://charts.helm.sh/stable
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo add minio https://helm.min.io/
        helm repo add amazeeio https://amazeeio.github.io/charts/
        helm repo add lagoon https://uselagoon.github.io/lagoon-charts/
        helm repo update
    - name: Install cluster pre-requisites
      run: |
        helm upgrade --install --create-namespace --namespace ingress-nginx --wait --timeout 10m --version 3.40.0 ingress-nginx ingress-nginx/ingress-nginx -f helmvalues/ingress-nginx.yaml
        helm upgrade --install --create-namespace --namespace registry --wait --timeout 10m --version 1.5.6 registry harbor/harbor -f helmvalues/registry.yaml
        helm upgrade --install --create-namespace --namespace nfs-server-provisioner --wait --timeout 10m --version 1.1.3 nfs-server-provisioner stable/nfs-server-provisioner -f helmvalues/nfs-server-provisioner.yaml
        helm upgrade --install --create-namespace --namespace minio --wait --timeout 10m --version 8.1.11 minio bitnami/minio -f helmvalues/minio.yaml
    - name: Install DBaaS pre-requisites
      run: |
        helm upgrade --install --create-namespace --namespace mariadb --wait --timeout 10m --version=10.1.1 mariadb bitnami/mariadb -f helmvalues/local.yaml
        helm upgrade --install --create-namespace --namespace postgresql --wait --timeout 10m --version=10.13.14 postgresql bitnami/postgresql -f helmvalues/local.yaml
        helm upgrade --install --create-namespace --namespace mongodb --wait --timeout 10m --version=10.30.6 mongodb bitnami/mongodb -f helmvalues/local.yaml
    - name: Install Lagoon
      run: |
        helm upgrade --install --create-namespace --namespace lagoon --wait --timeout 20m lagoon-core lagoon/lagoon-core -f helmvalues/lagoon-core.yaml -f helmvalues/local.yaml
        helm upgrade --install --create-namespace --namespace lagoon --wait --timeout 10m lagoon-build-deploy lagoon/lagoon-build-deploy -f helmvalues/lagoon-build-deploy.yaml -f helmvalues/local.yaml
        helm upgrade --install --create-namespace --namespace lagoon --wait --timeout 10m --debug lagoon-remote lagoon/lagoon-remote -f helmvalues/lagoon-remote.yaml -f helmvalues/local.yaml
    - name: Check that keycloak is ready
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 5
        max_attempts: 15
        retry_wait_seconds: 30
        retry_on: error
        command: kubectl logs -l app.kubernetes.io/component=lagoon-core-keycloak -n lagoon --tail=-1 | grep "Config of Keycloak done"
    - name: Update build-deploy-token in lagoon-test and install tests
      run: |
        kubectl -n lagoon get secret -o json | jq -r '.items[] | select(.metadata.name | match("lagoon-build-deploy-token")) | .data.token | @base64d' | xargs -I ARGS yq -i eval '.token = "ARGS"' helmvalues/local.yaml
        helm upgrade --install --create-namespace --namespace lagoon --wait --timeout 10m lagoon-test lagoon/lagoon-test -f helmvalues/lagoon-test.yaml -f helmvalues/local.yaml
    - name: Run tests
      run: |
        helm test lagoon-test --namespace lagoon --logs --timeout 30m
#        timeout 10m kubectl logs -f -l app.kubernetes.io/instance=lagoon-test -n lagoon
    - name: Run dbaas tests
      run: |
        helm upgrade --install --create-namespace --namespace lagoon --wait --timeout 10m lagoon-test lagoon/lagoon-test -f helmvalues/lagoon-test.yaml -f helmvalues/local.yaml --set tests.tests="{dbaas}"
        helm test lagoon-test --namespace lagoon --logs --timeout 30m
    - name: Inspect lagoon-remote pods if failed
      if: failure()
      run: |
        kubectl describe pods --namespace=lagoon --selector=app.kubernetes.io/name=lagoon-remote
        kubectl logs --tail=-1 --namespace=lagoon --prefix --timestamps --all-containers --selector=app.kubernetes.io/name=lagoon-remote
    - name: Inspect lagoon-core pods if failed
      if: failure()
      run: |
        kubectl describe pods --namespace=lagoon --selector=app.kubernetes.io/name=lagoon-core
        kubectl logs --tail=-1 --namespace=lagoon --prefix --timestamps --all-containers --selector=app.kubernetes.io/name=lagoon-core
    - name: Inspect lagoon-build-deploy pods if failed
      if: failure()
      run: |
        kubectl describe pods --namespace=lagoon --selector=app.kubernetes.io/name=lagoon-build-deploy
        kubectl logs --tail=-1 --namespace=lagoon --prefix --timestamps --all-containers --selector=app.kubernetes.io/name=lagoon-build-deploy
    - name: Inspect lagoon-test pods if failed
      if: failure()
      run: |
        kubectl describe pods --namespace=lagoon --selector=app.kubernetes.io/name=lagoon-test
        kubectl logs --tail=-1 --namespace=lagoon --prefix --timestamps --all-containers --selector=app.kubernetes.io/name=lagoon-test
    - name: Get cluster info
      run: |
        kubectl cluster-info
        kubectl get pods -A
        kubectl get ingress -A
        helm ls -aA